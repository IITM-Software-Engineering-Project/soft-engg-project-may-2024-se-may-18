As you can see I have opened a calculator application on my desktop. So, this is a, what is called a scientific calculator which you all will mostly be familiar with. We would use this in our examination hall. So why do we use this, today although you know calculators are seldom used especially the scientific ones given the advent of computer we still have these calculators which typically have these keys, as you can see the number here and some arithmetic operations here and then we have these extra operations on the left side. As you can guess this gives the square root of a number, let us say 8 square root gives you 2.89; 9 square root gives you 3 and then 8’s cube root gives you 2, 65, let us say 65’s cube root gives you something like this and so on and so forth. Okay, Let me clear it. (Refer Slide Time: 1:20) It also gives the value of sin of a number let us say this will be in radians but let us say sin of 45 is so much; sin of 30 is half; it is taking in degrees probably, that is why it is giving sin of 30 is half; sin of 60 is 0.86; sin of 90 we all know should be 1. So, I want to compute sin just by clicking. (Refer Slide Time: 1:52) So here you have x factorial, you say 5, 5 factorial is 120; 5 into 4 into 3 into 2 into 1, so on and so forth. So you have this facility on the calculator but how do we get such a facility on a computer, let us say in python. (Refer Slide Time: 2:11) This again is a lesson for completeness sake, you probably will never have a need to use an equivalent for scientific calculator, but we are using this as an example to explain what is called the library functions in python. So, it is sort of speaking self-explanatory, I will go ahead with a code and you can guess what I am doing. I will say import math, in a second I will tell you what I am doing here. I will say print math log of 10. Execute and I get 2.302585 and so on. This is actually the value of log 10. And then when I say print math of sin of 45, it gives you 0.85, that is the value of sin of 45. If I say sin of 90, it gives me 0.89, this is probably taking in radians and not degrees, anyways never mind. Let us not break our head much about it. What else did we try doing there? (Refer Slide Time: 3:23) We did what is called square root, sqrt square root of 10 will give you the square root value here. Let me comment this and square root of 16 as we all know is 4, which is displayed here, so on and so forth. We also did see factorial, let us see if factorial works here, factorial is showing error. I however having used factorial, so let me, yeah it is factorial the entire word factorial. (Refer Slide Time: 4:00) So factorial of 10 will give you factorial of 10, we tried doing it for 5, it was 120 and so you get 120 here, the point is we can go on and on, trying to tell you all the functions that are, that one can realize in the python, but the point here is the following in the first I say import math. By that I mean math is a library that python has by default, the moment you import math, you can use math dot sqrt 16 it will give you the answer. What does it mean? In a very simple language, imagine this to be a book from a library, which you bring home for reference. Once you bring home for reference, you can open up the book and then try reading it. So before that you may have to go to the library and then get it. You may wonder why use this, how I can as well delete this, and try executing this. (Refer Slide Time: 5:02) I think why is it that I should include import math of top, does not make sense, which is name math is not defined. This in let us say layman terms all that we are trying to say is the library book analogy, where if you want to use something, you must bring that book home from the library. You may be asking why is this even required? Why cannot the compiler automatically, why cannot your python programming language automatically go and fetch this library function as and when it is required, it is generally considered very costly, such a process to go and fetch it as in when it is required. So python expects you to explicitly state that you will be using this math library function, so keep it ready and your python programming language keeps it ready and hence you can use of the functions within this math library. In fact, it has many more possibilities, you can take a look for instance, you can say print math pow 10 comma 3, pow stands for this to the power of this. So it should print 1000, it is printing 1000 here, so on and so forth. Math is in fact a very interesting library if you are into programming that involves lot of mathematics. (Refer Slide Time: 6:38) But if not let us see something simpler than the math library function which happens to be at least my favorite library function that is the random library function. The moment you say import random, you will have this random library book in your house, analogously speaking python programming language will fetch you the random library just so that you can use it for your requirement. So what can we do with this? You see random dot random, you should open the bracket and close the bracket here, this will give you a random number between 0 and 1 as you can see. (Refer Slide Time: 7:13) So let me repeat import random is you get the random library function and then you say print random in that book you call this function called random, you will understand what functions are with time. But as of now you see this as a command, you call this command and you will get a random number between 0 and 1. Every time you execute this, you will get a different number as you can see, you execute this, you get a different number, keep executing it, you keep getting a different number between 0 and 1 only. (Refer Slide Time: 7:56) So what we will now do is, we will try to simulate a coin toss, what do I mean by that? What does the word simulating a coin toss means? Sounds a little cryptic let me type that in the comment. Let us simulate a coin toss, by that I mean you know before you play cricket or let us say any other game that involves a decision before hand, what we do is, we toss a coin. Anyone who wins the toss gets to choose whether he wants to bat or bowl. Correct? We all know that. So assuming that you are a cricket fan, I am going to use this example of coin toss. So what I will do is I will try to simulate this coin toss using this random function. How do I do that? We introduced you to this if condition, the if statement, I want to make use of that right now. So let me say a is equals to random dot random, which means this assigns a random value between 0 and 1 to a. Let us say if a is less than 0.5, print heads; if it is greater than 0.5 else print tail. Select and remove this, and see what this outputs, you see it is saying head when you executed once. When you executed once more, it will say tail, once more heads, once more heads, once more heads, once tail, again head, again head, again head, head, tail, tail, you see it is actually random, tail, heads, tail, heads, tail and so on. The magic here is to actually use this random statement, the random command here, which will help you fetch random number between 0 and 1 and what you do is if that random number, obviously if it is random, it should be less than 0.5 half the times and greater than 0.5 half the times. If it is less than half the times, if it is less than 0.5, I call it heads; if it is greater than 0.5 the else starts, I call it tail, as simple as that. This helps me simulate a coin toss. And anyone who comes and wants to toss a coin, can in fact use this program, this very program can replace a typical coin toss, in fact I would say it is much, much more random than a typical coin which might deal mostly you know, coins are generally will have small bias, very small bias, actually negligible bias, but still there will be some bias, but these functions that we are using right now, which I illustrated just now has very, very less bias. They are mostly fair as you can observe. And what happens within random is a very complicated process, let us not get into it, but then please understand what is the take home from this lesson is that you can import library functions and some of the library functions can be very, very handy. Just now we tried simulating a coin toss. (Refer Slide Time: 11:10) Before ending this lesson, let me also try simulating a dice. So there is something called, let me delete this, let us simulate dice, six faced dice. So let me introduce what is called, firstly import random and then I will say print random dot rand, there is something called rand int, ran down as you can see, rand range, let me say 1 comma 6. Let me see what this outputs; ranrange is a major typo here, rand range is giving you 2; rand range from 1 to 6 is giving you 2 1 1 1 1 5 2 1 2 4 3 1, you see 6 is missing, it is probably going up to 6 excluding 6. So let me check that, if I put 1 and 2, it keeps putting only 1 which means 6 is excluded, which means you may have to put 7 here. I knew the syntax but I have to illustrate this for you, that sometimes by trial and error, you can get to know what the function does. Of course you have help file too, but it best done by trying like this, not always will you be able to do this, but in most of the commands, you can do the trial and error way of understanding what it does. You see 6 popped up just now. 1 2 5 4 1 3 3 1 2 2 1 3 5 3 and so on. So I was able to simulate a die, is not it? Very interesting in fact we can play a game like snake and ladders just using programming. (Refer Slide Time: 13:08) So, let us do something more interesting, let me simulate two dice that we have been playing, dice 1 is equal to so much; dice 2 is equal to again the same thing, random rand range, 1 comma 6 or 7, so we observed that it should be 7, then close the bracket, we have dice 1 and dice 2. Total will be obviously equal to dice 1 plus dice 2. Print your pair of dice is, is then I will say total which means it is showing up the total, whatever that is. So let me clear the screen and then execute the program, and this should give you the simulation of, let us simulate the sum of two dice, six faced die. It is 11 and then 6 and then 2 and then 9 and then 5, then 7 and 7 and 7, 7, why is the 7 favorite, I know this is generally never happens you know what is called distribution, it should respect, of course 2 will be very rare, 1 will be very rare, but numbers between them will be sort of more frequent. In fact, the middle most number will be the most frequent, this is a very important law in probability, in fact what you are trying to see is popularly called the law of large numbers, in fact, it is also goes by you would have heard of central limit theorem, if you have not, let me not confuse you, but if you have, this has some links to that. So adding two dice is one of the simplest ways to in fact explain a lot of things in mathematics and programming. So I am trying to execute it often, just to see what all numbers we get. Anyways I hope you had fun with this random function, in fact I wish that you explore this random library as much as possible and try to use the functions that is given in the library and try to think of a nice way in which you can write a piece of code simulating a random phenomenon, just like how I simulated a die and simulated a coin toss and I also tried simulating sum of two dice.