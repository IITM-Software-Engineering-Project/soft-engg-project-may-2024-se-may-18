============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.2, pluggy-1.5.0
rootdir: /home/varunvilva/Programming/SoftwareEngineering/soft-engg-project-may-2024-se-may-18/server
plugins: anyio-4.4.0
collected 9 items

test_resources/test_code_computing.py ...FF....                          [100%]

=================================== FAILURES ===================================
____________________ test_compute_code_invalid_python_code _____________________

    def test_compute_code_invalid_python_code():
        '''
            Test compute code functionality with invalid Python code.
        '''
        response = client.post(
            "/compute",
            json={
                "problem_id": "wxyz",
                "user_id": "1",
                "language": "python",
                "code": """import sys
    class Solution:
        def print_statement(s):
            print(s)
    
    def main():
        # Read input from stdin
        input_data = sys.stdin.read().strip()
        Solution.print_statement(input_data
    
    if __name__ == "__main__":
        main()
    """
            }
        )
        assert response.status_code == 200
        data = response.json()
        assert data["message"] == "Passed 0 out of 1 test cases"
        assert len(data["result"]) == 1
>       assert data["result"][0]["error"].startswith("SyntaxError:")  # Expecting a syntax error
E       assert False
E        +  where False = <built-in method startswith of str object at 0x749711eedb60>('SyntaxError:')
E        +    where <built-in method startswith of str object at 0x749711eedb60> = 'Code execution failed:   File "/tmp/tmp37r6j092/code/solution.py", line 9\n    Solution.print_statement(input_data\n                            ^\nSyntaxError: \'(\' was never closed\n'.startswith

test_resources/test_code_computing.py:149: AssertionError
----------------------------- Captured stdout call -----------------------------
Error running test case 0: Code execution failed:   File "/tmp/tmp37r6j092/code/solution.py", line 9
    Solution.print_statement(input_data
                            ^
SyntaxError: '(' was never closed

_____________________ test_compute_code_invalid_java_code ______________________

    def test_compute_code_invalid_java_code():
        '''
            Test compute code functionality with invalid Java code.
        '''
        response = client.post(
            "/compute",
            json={
                "problem_id": "1",
                "user_id": "1",
                "language": "java",
                "code": """import java.util.Scanner;
    
    public class solution {
        public static void main(String[] args) {
            // Create a Scanner object to read input from stdin
            Scanner scanner = new Scanner(System.in);
    
            // Read all input from stdin
            StringBuilder inputBuilder = new StringBuilder();
            while (scanner.hasNextLine()) {
                inputBuilder.append(scanner.nextLine());
                if (scanner.hasNextLine()) {
                    inputBuilder.append("\\n");
                }
            }
            String inputData = inputBuilder.toString().trim();
    
            // Print the input
            System.out.print(inputData)
    
            // Close the scanner
            scanner.close();
        }
    }
    """
            }
        )
        assert response.status_code == 200
        data = response.json()
        assert data["message"] == "Passed 0 out of 1 test cases"
        assert len(data["result"]) == 1
>       assert data["result"][0]["error"].startswith("javac:")  # Expecting a compilation error
E       assert False
E        +  where False = <built-in method startswith of str object at 0x7497103723a0>('javac:')
E        +    where <built-in method startswith of str object at 0x7497103723a0> = "Command '['javac', '/tmp/tmplf6tpy3m/code/solution.java']' returned non-zero exit status 1.".startswith

test_resources/test_code_computing.py:195: AssertionError
----------------------------- Captured stdout call -----------------------------
Error running test case 0: Command '['javac', '/tmp/tmplf6tpy3m/code/solution.java']' returned non-zero exit status 1.
----------------------------- Captured stderr call -----------------------------
/tmp/tmplf6tpy3m/code/solution.java:19: error: ';' expected
        System.out.print(inputData)
                                   ^
1 error
=============================== warnings summary ===============================
../../../../.local/lib/python3.10/site-packages/pydantic/_internal/_config.py:291
../../../../.local/lib/python3.10/site-packages/pydantic/_internal/_config.py:291
../../../../.local/lib/python3.10/site-packages/pydantic/_internal/_config.py:291
../../../../.local/lib/python3.10/site-packages/pydantic/_internal/_config.py:291
  /home/varunvilva/.local/lib/python3.10/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.8/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test_resources/test_code_computing.py::test_compute_code_invalid_python_code
FAILED test_resources/test_code_computing.py::test_compute_code_invalid_java_code
=================== 2 failed, 7 passed, 4 warnings in 3.21s ====================
